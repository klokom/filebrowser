diff --git a/backend/adapters/fs/files/files.go b/backend/adapters/fs/files/files.go
index 77ff0dfd..3739df6e 100644
--- a/backend/adapters/fs/files/files.go
+++ b/backend/adapters/fs/files/files.go
@@ -74,6 +74,9 @@ func FileInfoFaster(opts iteminfo.FileOptions) (iteminfo.ExtendedFileInfo, error
 	response.FileInfo = *info
 	response.RealPath = realPath
 	response.Source = opts.Source
+	if preview.IsWSI(response.Name) {
+        response.IsWSI = true
+    }
 	if settings.Config.Integrations.OnlyOffice.Secret != "" && info.Type != "directory" && iteminfo.IsOnlyOffice(info.Name) {
 		response.OnlyOfficeId = generateOfficeId(realPath)
 	}
diff --git a/backend/cmd/root.go b/backend/cmd/root.go
index 13766f5d..94060bb5 100644
--- a/backend/cmd/root.go
+++ b/backend/cmd/root.go
@@ -97,6 +97,7 @@ func StartFilebrowser() {
 	}
 	validateUserInfo()
 	validateOfficeIntegration()
+	validateWSIIntegration()
 	// Start the rootCMD in a goroutine
 	go func() {
 		if err := rootCMD(ctx, store, &serverConfig, shutdownComplete); err != nil {
diff --git a/backend/common/settings/structs.go b/backend/common/settings/structs.go
index ea218aad..4d8f231c 100644
--- a/backend/common/settings/structs.go
+++ b/backend/common/settings/structs.go
@@ -48,6 +48,7 @@ type Server struct {
 type Integrations struct {
 	OnlyOffice OnlyOffice `json:"office" validate:"omitempty"`
 	Media      Media      `json:"media" validate:"omitempty"`
+	WSI        WSI        `json:"wsi" validate:"omitempty"`
 }
 
 // onlyoffice secret is stored in the local.json file
@@ -58,6 +59,15 @@ type OnlyOffice struct {
 	Secret      string `json:"secret" validate:"required"`
 }
 
+// WSI holds the configuration for the WSI tile server integration.
+type WSI struct {
+	// The URL to the slideserver, accessible to the user's browser.
+	URL string `json:"url" validate:"omitempty"`
+	// An optional internal address that the filebrowser server can use to
+	// communicate with the slideserver, useful for health checks.
+	InternalUrl string `json:"internalUrl,omitempty"`
+}
+
 type Media struct {
 	FfmpegPath string `json:"ffmpegPath"` // path to ffmpeg directory with ffmpeg and ffprobe (eg. /usr/local/bin)
 }
diff --git a/backend/http/static.go b/backend/http/static.go
index 99c63921..06d3bb1d 100644
--- a/backend/http/static.go
+++ b/backend/http/static.go
@@ -61,6 +61,8 @@ func handleWithStaticData(w http.ResponseWriter, r *http.Request, file, contentT
 		"MediaAvailable":    config.Integrations.Media.FfmpegPath != "",
 		"MuPdfAvailable":    config.Server.MuPdfAvailable,
 		"UpdateAvailable":   utils.GetUpdateAvailableUrl(),
+		"WSIUrl":            strings.TrimSuffix(settings.Config.Integrations.WSI.URL, "/"),
+		"WSIAvailable":      settings.Config.Integrations.WSI.URL != "",
 	}
 
 	b, err := json.Marshal(data)
diff --git a/backend/indexing/iteminfo/fileinfo.go b/backend/indexing/iteminfo/fileinfo.go
index 84ca8650..77b3ec36 100644
--- a/backend/indexing/iteminfo/fileinfo.go
+++ b/backend/indexing/iteminfo/fileinfo.go
@@ -31,6 +31,7 @@ type ExtendedFileInfo struct {
 	Checksums    map[string]string `json:"checksums,omitempty"`    // checksums for the file
 	Token        string            `json:"token,omitempty"`        // token for the file -- used for sharing
 	OnlyOfficeId string            `json:"onlyOfficeId,omitempty"` // id for onlyoffice files
+	IsWSI        bool              `json:"isWSI,omitempty"`
 	Source       string            `json:"source"`                 // associated index source for the file
 	RealPath     string            `json:"-"`
 }
